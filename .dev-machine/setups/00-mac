#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

source "$HOME/.dev-machine/setups/__utils.bash"

system_type=$(uname -s)

if [ "$system_type" != "Darwin" ]; then
  echo "⏭ System is not a mac, skipping"
fi

fancy_echo "ℹ️ Setting up your Mac..."

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

if [ ! -f "$HOME/.zshrc.dev-machine" ]; then
  append_to_zshrc 'source "$HOME/.zshrc.dev-machine"'
  touch "$HOME/.zshrc.dev-machine"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'
append_to_bash_profile 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

update_shell() {
  local shell_path;
  shell_path="$(command -v zsh)"

  fancy_echo "Changing your shell to zsh ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

case "$SHELL" in
  */zsh)
    if [ "$(command -v zsh)" != "$(brew --prefix)/bin/zsh" ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc "export PATH=\"$(brew --prefix)/bin:$PATH\"" 1
    append_to_bash_profile "export PATH=\"$(brew --prefix)/bin:$PATH\"" 1

    export PATH="$(brew --prefix)/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
cask_args appdir: "/Applications"
tap "universal-ctags/universal-ctags"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "git-lfs"
brew "ripgrep"
brew "watchman"
brew "zsh"
brew 'fastmod'
brew 'yadm'

# GitHub
brew "hub"

# Image manipulation
brew "imagemagick"

# Programming language prerequisites and package managers
brew "libyaml" 
brew "coreutils"
brew 'asdf'
brew 'rust'
brew 'python'

brew "postgres", start_service: false, restart_service: false
brew "redis", start_service: false, restart_service: false

# Apps
cask 'iterm2', args: { force: true }
cask "google-cloud-sdk", args: { force: true }
cask 'postman', args: { force: true }
cask 'ngrok', args: { force: true }
cask 'tuple', args: { force: true }
EOF

brew services stop postgres
brew services stop redis

fancy_echo "Removing old language version managers in favor of asdf..."
quietly_run brew remove rbenv || true
quietly_run brew remove ruby-build || true
quietly_run brew remove nodenv || true
quietly_run brew remove node-build || true

if command -v rvm >/dev/null; then
  rvm implode
fi

# shellcheck disable=SC1090
ASDF_DIR="$(brew --prefix asdf)"
export ASDF_DIR
# shellcheck disable=SC2016
append_to_zshrc 'export ASDF_DIR="$(brew --prefix asdf)"'
append_to_bash_profile 'export ASDF_DIR="$(brew --prefix asdf)"'
# shellcheck disable=SC2016
append_to_zshrc 'source "$(brew --prefix asdf)/asdf.sh"' 
append_to_bash_profile 'source "$(brew --prefix asdf)/asdf.sh"' 
# append_to_zshrc 'source $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash' 

set +u
source "$(brew --prefix asdf)/asdf.sh"
set -u

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi

# shellcheck disable=SC2016
append_to_zshrc 'source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"'
append_to_bash_profile 'source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"'
# shellcheck disable=SC2016
append_to_zshrc 'source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"'
append_to_bash_profile 'source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"'

append_to_zshrc 'source "$HOME/.dev-machine/zshrc"'
